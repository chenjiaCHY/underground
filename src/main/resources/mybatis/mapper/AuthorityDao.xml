<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ntschy.underground.dao.AuthorityDao">

    <select id="getUserInfo" resultType="com.ntschy.underground.entity.vo.UserInfoVO">
        SELECT UserId, Account, Name, Sex, Phone, Department, RoleId, Status
        FROM SYS_USER
        <where>
            <if test="userId != null and userId != ''">
                AND UserId = #{userId,jdbcType=VARCHAR}
            </if>
            <if test="account != null and account != ''">
                AND Account = #{account,jdbcType=VARCHAR}
            </if>
            <if test="pwd != null and pwd != ''">
                AND Password = #{pwd,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                AND Status = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <insert id="insertLoginToken" parameterType="com.ntschy.underground.entity.vo.LoginToken">
        INSERT INTO SYS_TOKEN(TokenId, UserId, Token, ExpiresTime, CreateTime, Status)
        VALUES (#{tokenId}, #{userId}, #{token}, #{expiresTime}, #{createTime}, #{status})
    </insert>

    <resultMap id="RoleInfoVO" type="com.ntschy.underground.entity.vo.RoleInfoVO">
        <result column="RoleId" property="roleId"/>
        <result column="Name" property="roleName"/>
        <result column="CreateTime" property="createTime"/>
        <collection property="actionList" ofType="com.ntschy.underground.entity.Action">
            <result column="ActionId" property="actionId"/>
            <result column="ActionName" property="name"/>
            <result column="Sort" property="sort"/>
        </collection>
    </resultMap>

    <select id="getRoleInfo" resultMap="RoleInfoVO">
        SELECT
            SR.RoleId,
            SR.Name,
            SR.CreateTime,
            SA.ActionId,
            SA.Name AS ActionName,
            SA.Sort
        FROM
            SYS_ROLE SR
        LEFT JOIN SYS_ROLE_ACTION_MAPPING SRAM ON SRAM.RoleId = SR.RoleId
        LEFT JOIN SYS_ACTION SA ON SA.ActionId = SRAM.ActionId
        WHERE SR.RoleId = #{roleId,jdbcType=VARCHAR}
    </select>

    <select id="getRoleCountByName" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM SYS_ROLE
        WHERE RoleId != #{roleId,jdbcType=VARCHAR} AND Name = #{roleName,jdbcType=VARCHAR}
    </select>

    <delete id="deleteRoleActionMapping">
        DELETE FROM SYS_ROLE_ACTION_MAPPING
        WHERE RoleId = #{roleId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteRole">
        DELETE FROM SYS_ROLE
        WHERE RoleId = #{roleId,jdbcType=VARCHAR}
    </delete>

    <insert id="insertRoleActionMapping" parameterType="list" useGeneratedKeys="false">
        INSERT INTO SYS_ROLE_ACTION_MAPPING(RoleId, ActionId)
        VALUES
        <foreach collection="mappings" item="item" separator=",">
            (#{item.roleId,jdbcType=VARCHAR}, #{item.actionId,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <insert id="insertRole" parameterType="com.ntschy.underground.entity.vo.RoleInfoVO">
        INSERT INTO SYS_ROLE(RoleId, Name, CreateTime)
        VALUES (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR})
    </insert>

    <update id="updateRole" parameterType="com.ntschy.underground.entity.vo.RoleInfoVO">
        UPDATE SYS_ROLE
        SET Name = #{roleName,jdbcType=VARCHAR}
        WHERE RoleId = #{roleId,jdbcType=VARCHAR}
    </update>

    <select id="getUserCountByAccount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM SYS_USER
        WHERE UserId != #{userId,jdbcType=VARCHAR} AND Account = #{account,jdbcType=VARCHAR}
    </select>

    <insert id="insertUser" parameterType="com.ntschy.underground.entity.dto.ModifyUserRequest">
        INSERT INTO SYS_USER(UserId, Account, Name, Password, Sex, Phone, Department, RoleId, Status, CreateTime)
        VALUES (#{userId,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 1, #{createTime,jdbcType=VARCHAR})
    </insert>

    <update id="updateUser">
        UPDATE SYS_USER
        SET Department = #{department,jdbcType=VARCHAR}, Phone = #{phone,jdbcType=VARCHAR}, RoleId = #{roleId,jdbcType=VARCHAR}
        WHERE UserId =#{userId,jdbcType=VARCHAR}
    </update>

    <delete id="deleteUser">
        DELETE FROM SYS_USER
        WHERE UserId = #{userId,jdbcType=VARCHAR}
    </delete>

    <select id="getActionList" resultType="com.ntschy.underground.entity.Action">
        SELECT ActionId, Name, Sort
        FROM SYS_ACTION
        ORDER BY Sort
    </select>

    <select id="getFullRoleList" resultType="com.ntschy.underground.entity.vo.RoleInfoVO">
        SELECT RoleId, Name AS RoleName, CreateTime
        FROM SYS_ROLE
        ORDER BY CreateTime
    </select>

    <select id="getRoleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM SYS_ROLE
    </select>

    <select id="getRoleList" resultType="com.ntschy.underground.entity.vo.RoleInfoVO">
        SELECT * FROM (
            SELECT
                RoleId,
                Name AS RoleName,
                CreateTime,
                ROW_NUMBER() OVER(ORDER BY CreateTime) ROWNO
            FROM
                SYS_ROLE
        ) TABLE_ALIAS
        WHERE TABLE_ALIAS.ROWNO BETWEEN #{startNo} AND #{endNo}
    </select>

    <select id="getActionListByRoleId" resultType="com.ntschy.underground.entity.Action">
        SELECT SA.ActionId, SA.Name, SA.Sort
        FROM SYS_ACTION SA
        LEFT JOIN SYS_ROLE_ACTION_MAPPING SRAM ON SA.ActionId = SRAM.ActionId
        WHERE SRAM.RoleId = #{roleId,jdbcType=VARCHAR}
        ORDER BY SA.Sort
    </select>

    <select id="getRoleInUseCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM SYS_USER
        WHERE RoleId = #{roleId,jdbcType=VARCHAR} AND Status = 1
    </select>

    <select id="getUserCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM SYS_USER
        <where>
            <if test="account != null and account != ''">
                Account = #{account,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="getUserList" resultType="com.ntschy.underground.entity.vo.UserInfoVO">
        SELECT * FROM (
            SELECT
                ROW_NUMBER() OVER(ORDER BY SU.CreateTime) ROWNO,
                SU.UserId,
                SU.Account,
                SU.Name,
                SU.Sex,
                SU.Phone,
                SU.Department,
                SU.RoleId,
                SR.Name AS RoleName,
                SU.Status,
                SU.CreateTime
            FROM SYS_USER SU
            LEFT JOIN SYS_ROLE SR ON SU.RoleId = SR.RoleId
            <where>
                <if test="account != null and account != ''">
                    SU.Account = #{account,jdbcType=VARCHAR}
                </if>
            </where>
        ) TABLE_ALIAS
        WHERE TABLE_ALIAS.ROWNO BETWEEN #{startNo} AND #{endNo}
    </select>

    <update id="modifyUserPwd">
        UPDATE SYS_USER
        SET Password = #{newPwd,jdbcType=VARCHAR}
        WHERE Account = #{account,jdbcType=VARCHAR}
    </update>

    <update id="activeUser">
        UPDATE SYS_USER
        SET Status = #{status,jdbcType=VARCHAR}
        WHERE UserId IN
        <foreach collection="userIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="getLoginToken" resultType="com.ntschy.underground.entity.vo.LoginToken">
        SELECT t.* FROM (
            SELECT ROW_NUMBER() OVER(ORDER BY CreateTime DESC) ROWNO,
                TokenId, UserId, Token, ExpiresTime, Status, CreateTime
            FROM SYS_TOKEN
            WHERE UserId = #{userId} and ExpiresTime >= #{expiresTime} and Status = 1
        ) t
        WHERE ROWNO = 1
    </select>

    <select id="getUrlPermissionUrl" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM
            SYS_ROLE_ACTION_MAPPING SRAM
        LEFT JOIN SYS_ACTION_URL_MAPPING SAUM ON SRAM.ActionId = SAUM.ActionId
        WHERE SRAM.RoleId = #{roleId,jdbcType=VARCHAR} AND SAUM.Url = #{uri,jdbcType=VARCHAR}
    </select>

    <update id="updateLoginTokenExpiresTime">
        UPDATE SYS_TOKEN
        SET ExpiresTime = #{expiresTime}
        WHERE Token = #{token} AND Status = 1
    </update>

    <insert id="insertOperateLog">
        INSERT INTO SYS_OPERATE_LOG(LogId, BusinessUrl, OperParam, JsonResult, Method, OperateUser, OperateTime, OperateIp)
        VALUES (#{id}, #{requestURI}, #{operateRequParam}, #{operateRespParam}, #{operateMethod}, #{operateUser}, #{operateTime}, #{operateIp})
    </insert>
</mapper>